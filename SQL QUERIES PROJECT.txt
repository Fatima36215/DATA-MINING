create schema dm;
use dm;

CREATE TABLE Departments (
    department_id INT AUTO_INCREMENT PRIMARY KEY,
    department_name VARCHAR(100) NOT NULL
);

CREATE TABLE Employees (
    employee_id INT AUTO_INCREMENT PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    hire_date DATE,
    department_id INT,
    FOREIGN KEY (department_id) REFERENCES Departments(department_id)
);

-- Inserting values into Departments table
INSERT INTO Departments (department_name) VALUES ('Sales');
INSERT INTO Departments (department_name) VALUES ('Marketing');
INSERT INTO Departments (department_name) VALUES ('HR');

-- Inserting values into Employees table
-- Correct department_id values to match existing departments
INSERT INTO Employees (first_name, last_name, hire_date, department_id)
VALUES ('John', 'Doe', '2023-01-15', 1);

INSERT INTO Employees (first_name, last_name, hire_date, department_id)
VALUES ('Al', 'Abass', '2023-11-12', 2);

SELECT * FROM Departments;
SELECT * FROM Employees;

-- Retrieve the first_name and last_name of all employees from the Employees table where the department_id is 1.
SELECT first_name, last_name 
FROM Employees 
WHERE department_id = 1;

-- Retrieve all employees whose last_name starts with 's'
SELECT first_name, last_name
FROM Employees 
WHERE last_name LIKE 's%';

-- Retrieve all employees
SELECT * FROM Employees;

-- Retrieve All Employees in the Marketing Department
SELECT e.first_name, e.last_name 
FROM Employees e
JOIN Departments d ON e.department_id = d.department_id
WHERE d.department_name = 'Marketing';

-- Find Employees Hired After a Specific Date
SELECT first_name, last_name, hire_date 
FROM Employees 
WHERE hire_date > '2023-01-01';

-- Count the Number of Employees in Each Department
SELECT department_id, COUNT(*) AS num_employees 
FROM Employees 
GROUP BY department_id;

-- Find the Earliest Hire Date Across All Employees
SELECT MIN(hire_date) AS earliest_hire_date 
FROM Employees;

-- Find the Latest Hire Date in the Sales Department
SELECT MAX(hire_date) AS latest_hire_date 
FROM Employees 
WHERE department_id = 1;

-- Find All Employees Who Don't Belong to Any Department (Orphaned Records)
SELECT first_name, last_name 
FROM Employees 
WHERE department_id NOT IN (SELECT department_id FROM Departments);

-- Count Employees in Each Department with more than 1 employee
SELECT d.department_name, COUNT(e.employee_id) AS num_employees 
FROM Departments d
LEFT JOIN Employees e ON d.department_id = e.department_id
GROUP BY d.department_name
HAVING COUNT(e.employee_id) > 1;

-- Insert new departments
INSERT INTO Departments (department_name) VALUES ('Finance');
INSERT INTO Departments (department_name) VALUES ('IT');
INSERT INTO Departments (department_name) VALUES ('Operations');

-- Insert new employees
INSERT INTO Employees (first_name, last_name, hire_date, department_id)
VALUES 
    ('Alice', 'Williams', '2023-02-10', (SELECT department_id FROM Departments WHERE department_name = 'Finance')),
    ('Bob', 'Smith', '2023-03-15', (SELECT department_id FROM Departments WHERE department_name = 'IT')),
    ('Charlie', 'Johnson', '2023-04-20', (SELECT department_id FROM Departments WHERE department_name = 'Operations')),
    ('David', 'Brown', '2023-05-25', (SELECT department_id FROM Departments WHERE department_name = 'Finance')),
    ('Eva', 'Jones', '2023-06-30', (SELECT department_id FROM Departments WHERE department_name = 'IT'));

-- Find all employees in the Finance department
SELECT first_name, last_name 
FROM Employees e
JOIN Departments d ON e.department_id = d.department_id
WHERE d.department_name = 'Finance';


-- Find all employees in the Finance department
SELECT first_name, last_name 
FROM Employees e
JOIN Departments d ON e.department_id = d.department_id
WHERE d.department_name = 'Finance';

-- Find all employees hired in 2023
SELECT first_name, last_name, hire_date 
FROM Employees 
WHERE YEAR(hire_date) = 2023;

-- Count employees per department, sorted by the number of employees in descending order
SELECT d.department_name, COUNT(e.employee_id) AS num_employees 
FROM Departments d
LEFT JOIN Employees e ON d.department_id = e.department_id
GROUP BY d.department_name
ORDER BY num_employees DESC;

-- Update department name from "Operations" to "Operations and Logistics"
-- Update department name from "Operations" to "Operations and Logistics"
UPDATE Departments d
JOIN (SELECT department_id FROM Departments WHERE department_name = 'Operations') sub
ON d.department_id = sub.department_id
SET d.department_name = 'Operations and Logistics';

-- Delete the most recently hired employee in the IT department
CREATE TEMPORARY TABLE TempEmployeeId AS
SELECT e.employee_id 
FROM Employees e
JOIN Departments d ON e.department_id = d.department_id
WHERE d.department_name = 'IT'
ORDER BY e.hire_date DESC
LIMIT 1;


-- Find departments with more than two employees and list their employees
SELECT d.department_name, e.first_name, e.last_name 
FROM Departments d
JOIN Employees e ON d.department_id = e.department_id
WHERE d.department_id IN (
    SELECT department_id 
    FROM Employees 
    GROUP BY department_id 
    HAVING COUNT(employee_id) > 2
);


